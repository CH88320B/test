using System.Globalization;
using EH.Shared.SdocAdapter.Enums;
using EH.Shared.SdocToXpmConverter.Mapping.Tools;
using Mapster;

namespace EH.Shared.SdocToXpmConverter.Mapping.Configs
{
    public class PatientVisitMappingConfig : IRegister
    {
        public void Register( TypeAdapterConfig config )
        {
            // Mapping config for Models.Xpm.PatientVisit and dependents.
            TypeAdapterConfig<SdocAdapter.Root, Models.Xpm.PatientVisit>.ForType()
                 .Map(dest => dest.IsSelfPay, src => src.PatientVisit.IsSelfPay)
                 .Map(dest => dest.AccommodationCode, src => src.PatientVisit.AccommodationCode)
                 .Map(dest => dest.Activities, src => src.PatientVisit.Activities)
                 .Map(dest => dest.Activity, src => src.PatientVisit.Activity)
                 .Map(dest => dest.ActivityIDs, src => src.PatientVisit.ActivityIDs)
                 .Map(dest => dest.ActualLengthofInpatientStay, src => src.PatientVisit.LengthOfStay)
                 .Map(dest => dest.AdmissionReason, src => src.PatientVisit.AdmissionReason)
                 .Map(dest => dest.AdmissionType, src => src.PatientVisit.AdmissionType)
                 .Map(dest => dest.AdmissionTypeDDSO, src => src.PatientVisit.AdmissionType_DDSO)
                 .Map(dest => dest.AdmitDateTime, src => src.PatientVisit.AdmitDateTime)
                 .Map(dest => dest.AdmitDateTime, src => src.PatientVisit.DateAdmitted)
                 .Map(dest => dest.AdmitProcedureCode, src => src.PatientVisit.AdmitProcedureCode)
                 .Map(dest => dest.AdmitProcedureCodesCombined, src => src.PatientVisit.AdmitProcedureCodesCombined)
                 .Map(dest => dest.AdmitSource, src => src.PatientVisit.AdmitSource)
                 .Map(dest => dest.AdmittedLast60DaysAdmitDate, src => src.MSP.AdmittedLast60DaysAdmitDate)
                 .Map(dest => dest.AdmittedLast60DaysDischargeDate, src => src.MSP.AdmittedLast60DaysDischargeDate)
                 .Map(dest => dest.AdmittedLast60DaysFacilityName, src => src.MSP.AdmittedLast60DaysFacilityName)
                 .Map(dest => dest.AdmittedToHospitalLast60Days, src => src.MSP.AdmittedToHospitalLast60Days)
                 .Map(dest => dest.AdmittingDiagnosisCode, src => src.PatientVisit.AdmittingDiagnosisCode)
                 .Map(dest => dest.AdmittingDiagnosisCodeICD10, src => src.PatientVisit.AdmittingDiagnosisCode_ICD10)
                 .Map(dest => dest.AdmitURN, src => src.PatientVisit.AdmitURN)
                 .Map(dest => dest.AetnaPIN, src => src.PatientVisit.AetnaPIN)
                 .Map(dest => dest.AlternateVisitId, src => src.PatientVisit.AlternateVisitID)
                 .Map(dest => dest.AppointmentStatus, src => src.PatientVisit.AppointmentStatus)
                 .Map(dest => dest.AssignedArea, src => src.PatientVisit.AssignedArea)
                 .Map(dest => dest.AssignedLocation, src => src.PatientVisit.AssignedLocation)
                 .Map(dest => dest.AuthFacilityId, src => src.PatientVisit.AuthFacilityID)
                 .Map(dest => dest.AuthProviderNPI, src => src.PatientVisit.AuthProviderNPI)
                 .Map(dest => dest.AuthReferringLocationNPI, src => src.PatientVisit.AuthReferringLocationNPI)
                 .Map(dest => dest.AuthReferringProviderNPI, src => src.PatientVisit.AuthReferringProviderNPI)
                 .Map(dest => dest.BadDebtAgencyCode, src => src.PatientVisit.BadDebtAgencyCode)
                 .Map(dest => dest.BedType, src => src.PatientVisit.BedType)
                 .Map(dest => dest.BillingNumber, src => src.PatientVisit.BillingNumber)
                 .Map(dest => dest.BypassEMRNUpdates, src => src.PatientVisit.BypassEMRN_Updates)
                 .Map(dest => dest.Calculated, src => MappingHelpers.MapCalculatedForPatientVisit(src))
                 .Map(dest => dest.CertificateTypeCode, src => src.PatientVisit.CertificateTypeCode)
                 .Map(dest => dest.CertificationType, src => src.PatientVisit.CertificationType)
                 .Map(dest => dest.ClaimMonetaryAmount, src => src.PatientVisit.ClaimMonetaryAmount.ToString(CultureInfo.InvariantCulture))
                 .Map(dest => dest.ClaimMonetaryAmountExists, src => src.PatientVisit.ClaimMonetaryAmountExists)
                 .Map(dest => dest.ClientMasterPatientId, src => src.PatientVisit.ClientMasterPatientID)
                 .Map(dest => dest.ClientProvidedAccountUpdatedBy, src => src.PatientVisit.ClientProvided_AccountUpdatedBy)
                 .Map(dest => dest.ClientProvidedMedicalNecessityFailedReason, src => src.PatientVisit.ClientProvided_MedicalNecessityFailedReason)
                 .Map(dest => dest.ClientProvidedMedicalNecessityPasses, src => src.PatientVisit.ClientProvided_MedicalNecessityPasses)
                 .Map(dest => dest.ClientProvidedPatientArrivedBy, src => src.PatientVisit.ClientProvided_PatientArrivedBy)
                 .Map(dest => dest.ClientSpecificNumber, src => src.PatientVisit.ClientSpecificNumber)
                 .Map(dest => dest.ClientTaxId, src => src.PatientVisit.ClientTaxId)
                 .Map(dest => dest.ClinicOrganizationName, src => src.PatientVisit.ClinicOrganizationName)
                 .Map(dest => dest.ComprehensiveLocationIdentifier, src => src.PatientVisit.ComprehensiveLocationIdentifier)
                 .Map(dest => dest.ContractAmount, src => src.PatientVisit.ClaimMonetaryAmount.ToString(CultureInfo.InvariantCulture))
                 .Map(dest => dest.ContractDefinitionFlag, src => src.PatientVisit.PPE_ContractDefinitionFlag)
                 .Map(dest => dest.ControlNumbers, src => src.PatientVisit.ControlNumbers)
                 .Map(dest => dest.CreditRating, src => src.PatientVisit.CreditRating)
                 .Map(dest => dest.DeathAndAutopsy, src => new Models.Xpm.DeathAndAutopsy())
                 .Map(dest => dest.DeleteAccountDate, src => src.PatientVisit.DeleteAccountDate)
                 .Map(dest => dest.DeleteAccountIndicator, src => src.PatientVisit.DeleteAccountIndicator)
                 .Map(dest => dest.DischargeDisposition, src => src.PatientVisit.DischargeCode)
                 .Map(dest => dest.DischargeDisposition, src => src.PatientVisit.DischargeDisposition)
                 .Map(dest => dest.DischargedToLocation, src => src.PatientVisit.DischargedToLocation)
                 .Map(dest => dest.DiscountPosted, src => src.PatientVisit.DiscountPosted.ToString(CultureInfo.InvariantCulture))
                 .Map(dest => dest.DrugName, src => src.PatientVisit.DrugName)
                 .Map(dest => dest.DrugStrength, src => src.PatientVisit.DrugStrength)
                 .Map(dest => dest.DualEntitlementMedicareDualEntitlement, src => src.MSP.DualEntitlementMedicareDualEntitlement)
                 .Map(dest => dest.DualEntitlementMedicareInitialEntitlementOnESRD, src => src.MSP.DualEntitlementMedicareInitialEntitlementOnESRD)
                 .Map(dest => dest.DualEntitlementWorkingAgedMSPDisabilityApply, src => src.MSP.DualEntitlementWorkingAgedMSPDisabilityApply)
                 .Map(dest => dest.EncounterPayerDescription, src => src.PatientVisit.EncounterPayerDescription)
                 .Map(dest => dest.EncounterPayerId, src => src.PatientVisit.EncounterPayerID)
                 .Map(dest => dest.EntityIdentifier, src => src.PatientVisit.EntityIdentifier)
                 .Map(dest => dest.EstimateContChargeZeroFlag, src => src.PatientVisit.PPE_EstimateContChargeZeroFlag)
                 .Map(dest => dest.EstimatedDOS, src => src.PatientVisit.EstimatedDOS)
                 .Map(dest => dest.EstimateWithEditBenefitFlag, src => src.PatientVisit.PPE_EstimateWithEditBenefitFlag)
                 .Map(dest => dest.EstimateWithNoBenefitFlag, src => src.PatientVisit.PPE_EstimateWithNoBenefitFlag)
                 .Map(dest => dest.ExpectedService, src => src.PatientVisit.ExpectedService)
                 .Map(dest => dest.FacilityAddress1, src => src.PatientVisit.FacilityAddress1)
                 .Map(dest => dest.FacilityAddress2, src => src.PatientVisit.FacilityAddress2)
                 .Map(dest => dest.FacilityCity, src => src.PatientVisit.FacilityCity)
                 .Map(dest => dest.FacilityCode, src => src.PatientVisit.FacilityCode)
                 .Map(dest => dest.FacilityContactName, src => src.PatientVisit.FacilityContactName)
                 .Map(dest => dest.FacilityContactPhone, src => src.PatientVisit.FacilityContactPhone)
                 .Map(dest => dest.FacilityFaxNumber, src => src.PatientVisit.FacilityFaxNumber)
                 .Map(dest => dest.FacilityName, src => src.PatientVisit.FacilityName)
                 .Map(dest => dest.FacilityNPI, src => src.PatientVisit.FacilityNPI)
                 .Map(dest => dest.FacilityState, src => src.PatientVisit.FacilityState)
                 .Map(dest => dest.FacilityTaxId, src => src.PatientVisit.FacilityTaxId)
                 .Map(dest => dest.FacilityTaxonomyCode, src => src.PatientVisit.FacilityTaxonomyCode)
                 .Map(dest => dest.FacilityZip, src => src.PatientVisit.FacilityZip)
                 .Map(dest => dest.FinancialClass, src => src.Patient.FinancialClass)
                 .Map(dest => dest.FinancialClearanceStatus, src => src.PatientVisit.FinancialClearanceStatus)
                 .Map(dest => dest.Financials, src => src.PatientVisit.Adapt<Models.Xpm.Financials>())
                 .Map(dest => dest.HealthPlanName, src => src.PatientVisit.HealthPlanName)
                 .Map(dest => dest.HospiceIsCoveredUnderHospiceProgram, src => src.MSP.HospiceIsCoveredUnderHospiceProgram)
                 .Map(dest => dest.HospiceIsPatientHospice, src => src.MSP.HospiceIsPatientHospice)
                 .Map(dest => dest.HospitalServiceCode, src => src.PatientVisit.ServiceType)
                 .Map(dest => dest.IDXLocation, src => src.PatientVisit.IDXLocation)
                 .Map(dest => dest.InfoGivenByCompleteQuestionnaire, src => src.MSP.General.CompleteQuestionnaire)
                 .Map(dest => dest.InfoGivenByDate, src => src.MSP.General.InfoGivenDate)
                 .Map(dest => dest.InfoGivenByFirstName, src => src.MSP.General.InfoGivenByName_FirstName)
                 .Map(dest => dest.InfoGivenByLastName, src => src.MSP.General.InfoGivenByName_LastName)
                 .Map(dest => dest.InfoGivenByMiddleInitial, src => src.MSP.General.InfoGivenByName_MiddleInitial)
                 .Map(dest => dest.InfoGivenByPrefix, src => src.MSP.General.InfoGivenByName_Prefix)
                 .Map(dest => dest.InfoGivenByRelationshipCode, src => src.MSP.General.InfoGivenByRelationship_RelationshipCode)
                 .Map(dest => dest.InfoGivenByRelationshipDescription, src => src.MSP.General.InfoGivenByRelationship_RelationshipDescription)
                 .Map(dest => dest.InfoGivenBySuffix, src => src.MSP.General.InfoGivenByName_Suffix)
                 .Map(dest => dest.InsuranceCount, src => src.PatientVisit.InsuranceCount)
                 .Map(dest => dest.InsVerifiedBy, src => src.PatientVisit.InsVerifiedBy)
                 .Map(dest => dest.InterestCode, src => src.PatientVisit.InterestCode)
                 .Map(dest => dest.IsComplete, src => src.PatientVisit.IsComplete)
                 .Map(dest => dest.IsObservation, src => src.PatientVisit.IsObservation)
                 .Map(dest => dest.IsPortalUser, src => src.PatientVisit.IsPortalUser)
                 .Map(dest => dest.LevelOfService, src => src.PatientVisit.LevelOfService)
                 .Map(dest => dest.LocationStatus, src => src.PatientVisit.LocationStatus)
                 .Map(dest => dest.Miscellaneouse4, src => src.MSP.Miscellaneouse4)
                 .Map(dest => dest.Miscellaneouse5, src => src.MSP.Miscellaneouse5)
                 .Map(dest => dest.Miscellaneouse6, src => src.MSP.Miscellaneouse6)
                 .Map(dest => dest.Miscellaneouse7, src => src.MSP.Miscellaneouse7)
                 .Map(dest => dest.Miscellaneouse8, src => src.MSP.Miscellaneouse8)
                 .Map(dest => dest.Miscellaneouse9, src => src.MSP.Miscellaneouse9)
                 .Map(dest => dest.ModeOfArrivalCode, src => src.PatientVisit.VisitArrivalMode)
                 .Map(dest => dest.MPIN, src => src.PatientVisit.MPIN)
                 .Map(dest => dest.MSPByPass, src => src.PatientVisit.MSPByPass)
                 .Map(dest => dest.NDC, src => src.PatientVisit.NDC)
                 .Map(dest => dest.NeboMessageId, src => src.PatientVisit.NeboMessageID)
                 .Map(dest => dest.NOAAdmissionDate, src => src.PatientVisit.NOAAdmissionDate)
                 .Map(dest => dest.NOAVisitTime, src => src.PatientVisit.NOAVisitTime)
                 .Map(dest => dest.OnsetOfIllness, src => src.PatientVisit.OnsetOfIllness)
                 .Map(dest => dest.OrderLocation, src => src.PatientVisit.OrderLocation)
                 .Map(dest => dest.OtherHealthcareProvider, src => src.PatientVisit.OtherHealthcareProvider)
                 .Map(dest => dest.PassportVisitIdentifier, src => src.PatientVisit.PassportVisitIdentifier)
                 .Map(dest => dest.PatientClass, src => src.PatientVisit.PatientClass)
                 .Map(dest => dest.PatientEntryServiceEndDate, src => src.PatientVisit.PatientEntry_ServiceEndDate)
                 .Map(dest => dest.PatientEntryServiceStartDate, src => src.PatientVisit.PatientEntry_ServiceStartDate)
                 .Map(dest => dest.PatientFacility, src => src.PatientVisit.PatientFacility)
                 .Map(dest => dest.PatientMemberId, src => src.PatientVisit.PatientMemberID)
                 .Map(dest => dest.PatientMerges, src => new List<Models.Xpm.PatientMerge>())
                 .Map(dest => dest.PatientModule, src => src.PatientVisit.PatientModule)
                 .Map(dest => dest.PatientServiceCenter, src => src.PatientVisit.PatientServiceCenter)
                 .Map(dest => dest.PatientStatus, src => src.PatientVisit.PatientStatus)
                 .Map(dest => dest.PatientStatusCode, src => src.PatientVisit.PatientStatusCode)
                 .Map(dest => dest.PatientType, src => src.PatientVisit.PatientType)
                 .Map(dest => dest.PatientValuablesLocation, src => src.PatientVisit.PatientValuablesLocation)
                 .Map(dest => dest.PatientVipIndicator, src => src.PatientVisit.VIPCode)
                 .Map(dest => dest.PatientVipIndicator, src => src.PatientVisit.VIPIndicator)
                 .Map(dest => dest.PaymentReceived, src => src.PatientVisit.PaymentReceived.ToString(CultureInfo.InvariantCulture))
                 .Map(dest => dest.PETouchlessTypeIndicator, src => src.PatientVisit.PETouchlessTypeIndicator)
                 .Map(dest => dest.Physician, src => MappingHelpers.MapPhysician(src.PatientVisit))
                 .Map(dest => dest.PPEAmount, src => src.PatientVisit.PPE_Amount)
                 .Map(dest => dest.PPEDateTime, src => src.PatientVisit.PPE_DateTime)
                 .Map(dest => dest.PPETotalAmount, src => src.PatientVisit.PPE_TotalAmount)
                 .Map(dest => dest.PPEUser, src => src.PatientVisit.PPE_User)
                 .Map(dest => dest.PreadmitNumber, src => src.PatientVisit.PreadmitNumber)
                 .Map(dest => dest.PreAdmitTestIndicator, src => src.PatientVisit.PreAdmitTestIndicator)
                 .Map(dest => dest.PrecertNumbers, src => src.PatientVisit.PrecertNumbers)
                 .Map(dest => dest.PreventativeServiceCodeQualifier, src => src.PatientVisit.ProcedureCodeQualifier)
                 .Map(dest => dest.PreventativeServicePlaceOfService, src => src.PatientVisit.PlaceOfService)
                 .Map(dest => dest.PrincipalDiagnosisCode, src => src.PatientVisit.PrincipalDiagnosisCode)
                 .Map(dest => dest.PrincipalDiagnosisCodeICD10, src => src.PatientVisit.PrincipalDiagnosisCode_ICD10)
                 .Map(dest => dest.ProcedureCharge1, src => src.PatientVisit.ProcedureCharge1.ToString(CultureInfo.InvariantCulture))
                 .Map(dest => dest.ProcedureCharge2, src => src.PatientVisit.ProcedureCharge2.ToString(CultureInfo.InvariantCulture))
                 .Map(dest => dest.ProcedureCharge3, src => src.PatientVisit.ProcedureCharge3.ToString(CultureInfo.InvariantCulture))
                 .Map(dest => dest.ProcedureCharge4, src => src.PatientVisit.ProcedureCharge4.ToString(CultureInfo.InvariantCulture))
                 .Map(dest => dest.ProcedureCharge5, src => src.PatientVisit.ProcedureCharge5.ToString(CultureInfo.InvariantCulture))
                 .Map(dest => dest.ProcedureCharge6, src => src.PatientVisit.ProcedureCharge6.ToString(CultureInfo.InvariantCulture))
                 .Map(dest => dest.ProcedureCharge7, src => src.PatientVisit.ProcedureCharge7.ToString(CultureInfo.InvariantCulture))
                 .Map(dest => dest.ProcedureCharge8, src => src.PatientVisit.ProcedureCharge8.ToString(CultureInfo.InvariantCulture))
                 .Map(dest => dest.ProcedureCodeQuantity, src => src.PatientVisit.ProcedureCodeQuantity)
                 .Map(dest => dest.ProcedureCodes, src => MappingHelpers.MapProcedureCodes(src))
                 .Map(dest => dest.ProcedureMnemonic, src => src.PatientVisit.ProcedureMnemonic)
                 .Map(dest => dest.ProcedureTypeCode, src => src.PatientVisit.ProcedureTypeCode)
                 .Map(dest => dest.PropertyAndCasualty, src => src.PatientVisit.PropertyAndCasualty)
                 .Map(dest => dest.PSTNoPayorResponseFlag, src => src.PatientVisit.PPE_PSTNoPayorResponseFlag)
                 .Map(dest => dest.PSTNoReqSTCsFlag, src => src.PatientVisit.PPE_PSTNoReqSTCsFlag)
                 .Map(dest => dest.QueueManagerUserDefinedFields1, src => src.PatientVisit.QueueManagerUserDefinedField1)
                 .Map(dest => dest.QueueManagerUserDefinedFields10, src => src.PatientVisit.QueueManagerUserDefinedField10)
                 .Map(dest => dest.QueueManagerUserDefinedFields11, src => src.PatientVisit.QueueManagerUserDefinedField11)
                 .Map(dest => dest.QueueManagerUserDefinedFields12, src => src.PatientVisit.QueueManagerUserDefinedField12)
                 .Map(dest => dest.QueueManagerUserDefinedFields13, src => src.PatientVisit.QueueManagerUserDefinedField13)
                 .Map(dest => dest.QueueManagerUserDefinedFields14, src => src.PatientVisit.QueueManagerUserDefinedField14)
                 .Map(dest => dest.QueueManagerUserDefinedFields15, src => src.PatientVisit.QueueManagerUserDefinedField15)
                 .Map(dest => dest.QueueManagerUserDefinedFields16, src => src.PatientVisit.QueueManagerUserDefinedField16)
                 .Map(dest => dest.QueueManagerUserDefinedFields17, src => src.PatientVisit.QueueManagerUserDefinedField17)
                 .Map(dest => dest.QueueManagerUserDefinedFields18, src => src.PatientVisit.QueueManagerUserDefinedField18)
                 .Map(dest => dest.QueueManagerUserDefinedFields19, src => src.PatientVisit.QueueManagerUserDefinedField19)
                 .Map(dest => dest.QueueManagerUserDefinedFields2, src => src.PatientVisit.QueueManagerUserDefinedField2)
                 .Map(dest => dest.QueueManagerUserDefinedFields20, src => src.PatientVisit.QueueManagerUserDefinedField20)
                 .Map(dest => dest.QueueManagerUserDefinedFields3, src => src.PatientVisit.QueueManagerUserDefinedField3)
                 .Map(dest => dest.QueueManagerUserDefinedFields4, src => src.PatientVisit.QueueManagerUserDefinedField4)
                 .Map(dest => dest.QueueManagerUserDefinedFields5, src => src.PatientVisit.QueueManagerUserDefinedField5)
                 .Map(dest => dest.QueueManagerUserDefinedFields6, src => src.PatientVisit.QueueManagerUserDefinedField6)
                 .Map(dest => dest.QueueManagerUserDefinedFields7, src => src.PatientVisit.QueueManagerUserDefinedField7)
                 .Map(dest => dest.QueueManagerUserDefinedFields8, src => src.PatientVisit.QueueManagerUserDefinedField8)
                 .Map(dest => dest.QueueManagerUserDefinedFields9, src => src.PatientVisit.QueueManagerUserDefinedField8)
                 .Map(dest => dest.ReferralId, src => src.PatientVisit.ReferralID)
                 .Map(dest => dest.ReferralSourceFirstName, src => src.PatientVisit.ReferralSourceFirstName)
                 .Map(dest => dest.ReferralSourceId, src => src.PatientVisit.ReferralSourceID)
                 .Map(dest => dest.RegisteredByUser, src => src.PatientVisit.RegisteredByUser)
                 .Map(dest => dest.RoomType, src => src.PatientVisit.RoomType)
                 .Map(dest => dest.ScannedImages, src => src.PatientVisit.Adapt<Models.Xpm.ScannedImages>())
                 .Map(dest => dest.SelectedServiceType, src => src.PatientVisit.SelectedServiceType)
                 .Map(dest => dest.ServiceCode, src => src.PatientVisit.ServiceCode)
                 .Map(dest => dest.ServiceDate, src => src.PatientVisit.ServiceDate)
                 .Map(dest => dest.ServiceProviderId, src => src.PatientVisit.ServiceProviderID)
                 .Map(dest => dest.ServiceProviderName, src => src.PatientVisit.ServiceProviderName)
                 .Map(dest => dest.ServiceProviderNPI, src => src.PatientVisit.ServiceProviderNPI)
                 .Map(dest => dest.ServicingLocationName, src => src.PatientVisit.ServicingLocationName)
                 .Map(dest => dest.ServicingLocationNPI, src => src.PatientVisit.ServicingLocationNPI)
                 .Map(dest => dest.TrackingNumber, src => src.PatientVisit.TrackingNumber)
                 .Map(dest => dest.TransferReasonAlternateIdentifier, src => src.PatientVisit.TransferReason_AlternateIdentifier)
                 .Map(dest => dest.TransferReasonAlternateText, src => src.PatientVisit.TransferReason_AlternateText)
                 .Map(dest => dest.TransferToBadDebtCode, src => src.PatientVisit.TransferToBadDebtCode)
                 .Map(dest => dest.TransferToBadDebtDate, src => src.PatientVisit.TransferToBadDebtDate)
                 .Map(dest => dest.UbData, src => src.UBData.Adapt<Models.Xpm.UbData>())
                 .Map(dest => dest.UpdatedByEDRep, src => src.PatientVisit.UpdatedByEDRep)
                 .Map(dest => dest.VerifiedDate, src => src.PatientVisit.VerifiedDate)
                 .Map(dest => dest.VerifiedName, src => src.PatientVisit.VerifiedName)
                 .Map(dest => dest.VisitDescription, src => src.PatientVisit.VisitDescription)
                 .Map(dest => dest.VisitIdNumber, src => src.PatientVisit.VisitID)
                 .Map(dest => dest.VisitPriorityCode, src => src.PatientVisit.VisitPriorityCode)
                 .Map(dest => dest.VisitPublicityCode, src => src.PatientVisit.VisitPublicityCode)
                 .Map(dest => dest.VisitTime, src => src.PatientVisit.VisitTime)
                 .Map(dest => dest.VisitTypeDescription, src => src.PatientVisit.VisitTypeDescription)
                 .Map(dest => dest.VisitTypeId, src => src.PatientVisit.VisitTypeId)
                 .Map(dest => dest.Workplaces, src => MappingHelpers.MapWorkplaces(src))
                 .Map(dest => dest.Accident, src => MappingHelpers.MapAccident(src))
                 .Map(dest => dest.OrderLocation, src => src.PatientVisit.OrderLocation)
                 .Map(dest => dest.AISActionCodes, src => src.PatientVisit.AISActionCodes)
                .IgnoreNonMapped( true );

            TypeAdapterConfig<SdocAdapter.UBData, Models.Xpm.UbData>.ForType()
                .Map( dest => dest.OccuranceCodeUB82, src => src.Occurrence_OccurrenceCodes)
                .Map( dest => dest.OccuranceCodeUB92, src => src.Occurrence_OccurrenceCodes)
                .Map( dest => dest.OccuranceCodeUB92, src => src.OccurrenceCodeAndDate_OccurrenceCodes)
                .Map( dest => dest.OccuranceDateUB92, src => src.OccurrenceCodeAndDate_OccurrenceDates)
                .Map( dest => dest.OccurrenceDateUB82, src => src.Occurrence_OccurrenceDates)
                .Map( dest => dest.UB82ConditionCode, src => src.ConditionCode )
                .Map( dest => dest.Ub82OccurenceCodes, src => src.Occurrence_OccurrenceCodes )
                .Map( dest => dest.Ub82OccurenceDates, src => src.Occurrence_OccurrenceDates )
                .Map( dest => dest.Ub82ValueAmountAndCode, src => src.ValueAmountAndCode )
                .Map( dest => dest.Ub92ConditionCode, src => src.OtherConditionCode )
                .Map( dest => dest.Ub92OccurenceCodes, src => src.OccurrenceCodeAndDate_OccurrenceCodes )
                .Map( dest => dest.Ub92OccurenceDates, src => src.OccurrenceCodeAndDate_OccurrenceDates )
                .Map(dest => dest.ValueAmountAndCodeUB82, src => src.ValueAmountAndCode)
                .Map(dest => dest.ValueAmountandCodeUB92, src => src.ValueAmountAndCode)
                .IgnoreNonMapped( true );

            TypeAdapterConfig<SdocAdapter.PatientVisit, Models.Xpm.Financials>.ForType()
                .Map( dest => dest.BadDebtRecoveryAmount, src => src.BadDebtRecoveryAmount.ToString( CultureInfo.InvariantCulture ) )
                .Map( dest => dest.BadDebtTransferAmount, src => src.BadDebtTransferAmount.ToString( CultureInfo.InvariantCulture ) )
                .Map( dest => dest.CurrentPatientBalance, src => src.CurrentPatientBalance.ToString( CultureInfo.InvariantCulture ) )
                .Map( dest => dest.CurrentPatientBalance, src => src.AmountOwed)
                .Map( dest => dest.TotalAdjustments, src => src.TotalAdjustments.ToString( CultureInfo.InvariantCulture ) )
                .Map( dest => dest.TotalCharges, src => src.TotalCharges.ToString( CultureInfo.InvariantCulture ) )
                .Map( dest => dest.TotalPayments, src => src.TotalPayments.ToString( CultureInfo.InvariantCulture ) )
                .IgnoreNonMapped( true );

            TypeAdapterConfig<SdocAdapter.Root, Models.Xpm.Accident>.ForType()
                .Map( dest => dest.AccidentDateTime, src => src.MSP.AccidentDateTime )
                .Map( dest => dest.AutoAccidentState, src => src.PatientVisit.AccidentState )
                .Map( dest => dest.Code, src => src.PatientVisit.AccidentCode )
                .Map( dest => dest.Location, src => src.MSP.AccidentLocation )
                .Map(dest => dest.Description, src => src.MSP.AccidentDescription)

                .IgnoreNonMapped( true );

            TypeAdapterConfig<SdocAdapter.SDoc_ScannedImage, Models.Xpm.ScannedImages>.ForType()
                .Map(dest => dest.ImageID, src => src.ImageID)
                .Map(dest => dest.Scanned, src => src.Scanned)
                .IgnoreNonMapped(true);

            TypeAdapterConfig<(SdocAdapter.Order Order, SdocAdapter.Request Request), Models.Xpm.Order>.ForType()
                .Map(dest => dest.OrderControl, src => src.Order.OrderControl)
                .Map(dest => dest.PlacerOrderNumber, src => src.Order.PlacerOrderNumber)
                .Map(dest => dest.OrderFillerOrderNumber, src => src.Order.FillerOrderNumber)
                .Map(dest => dest.OrderStatus, src => src.Order.OrderStatus)
                .Map(dest => dest.OrderType, src => src.Order.ServiceType)
                .Map(dest => dest.Requests, src => new List<Models.Xpm.Request>())

                .IgnoreNonMapped(true);

            TypeAdapterConfig<SdocAdapter.Request, Models.Xpm.Request>.ForType()
                .Map(dest => dest.OrderedDateTime, src => src.OrderedDateTime)
                .Map(dest => dest.OrderSequence, src => src.OrderSequence)
                .Map(dest => dest.ProcedureGroup, src => src.PlacerGroupNumber)

                .IgnoreNonMapped(true);

            TypeAdapterConfig<SdocAdapter.Diagnose, Models.Xpm.Diagnosis>.ForType()
                .Map(dest => dest.DiagnosisCode, src => src.DiagnosisCode)
                .Map(dest => dest.DiagnosisDescription, src => src.Description)
                .Map(dest => dest.DiagnosisCodeIdentifier, src => src.Code)
                .Map(dest => dest.DiagnosisPriority, src => src.OrderSequence)
                .Map(dest => dest.DiagnosisType, src => src.DiagnosisType)
                .Map(dest => dest.DiagnosisCodingMethod, src => src.DiagnosisCodingMethod)

                .IgnoreNonMapped(true);

            TypeAdapterConfig<SdocAdapter.PatientMerge, Models.Xpm.PatientMerge>.ForType()
                .Map(dest => dest.PriorPatientAccountNumber, src => src.PriorAccountNumber)
                .Map(dest => dest.PriorMedicalRecordNumber, src => src.PriorMedicalRecordNumber)

                .IgnoreNonMapped(true);

            TypeAdapterConfig<( SdocAdapter.PatientVisit PatientVisit, PhysicianType PhysicianType ), Models.Xpm.Physician>.ForType()
                .Map( dest => dest.DocAssigningFacility, src => src.PatientVisit.AssigningFacility)
                .Map( dest => dest.DocCheckDigitScheme, src => src.PatientVisit.CodeIdentifyingTheCheckDigitSchemeEmployed)
                .Map( dest => dest.DocAddress1, src => src.PatientVisit.PatientAdmittingDocAddress1, src => src.PhysicianType == PhysicianType.Admitting )
                .Map( dest => dest.DocAddress1, src => src.PatientVisit.PatientAttendingDocAddress1, src => src.PhysicianType == PhysicianType.Attending )
                .Map( dest => dest.DocAddress2, src => src.PatientVisit.PatientAdmittingDocAddress2, src => src.PhysicianType == PhysicianType.Admitting )
                .Map( dest => dest.DocAddress2, src => src.PatientVisit.PatientAttendingDocAddress2, src => src.PhysicianType == PhysicianType.Attending )
                .Map( dest => dest.DocCity, src => src.PatientVisit.PatientAdmittingDocCity, src => src.PhysicianType == PhysicianType.Admitting )
                .Map( dest => dest.DocCity, src => src.PatientVisit.PatientAttendingDocCity, src => src.PhysicianType == PhysicianType.Attending )
                .Map( dest => dest.DocDegree, src => src.PatientVisit.PatientAdmittingDocDegree, src => src.PhysicianType == PhysicianType.Admitting )
                .Map( dest => dest.DocDegree, src => src.PatientVisit.PatientAttendingDocDegree, src => src.PhysicianType == PhysicianType.Attending )
                .Map( dest => dest.DocDegree, src => src.PatientVisit.PatientConsultingDocDegree, src => src.PhysicianType == PhysicianType.Consulting )
                .Map( dest => dest.DocDegree, src => src.PatientVisit.PatientReferringDocDegree, src => src.PhysicianType == PhysicianType.Referring )
                .Map( dest => dest.DocFamilyName, src => src.PatientVisit.PatientAdmittingDocFamilyName, src => src.PhysicianType == PhysicianType.Admitting )
                .Map( dest => dest.DocFamilyName, src => src.PatientVisit.PatientAttendingDocFamilyName, src => src.PhysicianType == PhysicianType.Attending )
                .Map( dest => dest.DocFamilyName, src => src.PatientVisit.PatientConsultingDocFamilyName, src => src.PhysicianType == PhysicianType.Consulting )
                .Map( dest => dest.DocFamilyName, src => src.PatientVisit.PatientReferringDocFamilyName, src => src.PhysicianType == PhysicianType.Referring )
                .Map(dest =>  dest.DocFamilyName, src => src.PatientVisit.FirstName)
                .Map( dest => dest.DocFaxNumber, src => src.PatientVisit.PatientAdmittingDocFaxNumber, src => src.PhysicianType == PhysicianType.Admitting )
                .Map( dest => dest.DocFaxNumber, src => src.PatientVisit.PatientAttendingDocFaxNumber, src => src.PhysicianType == PhysicianType.Attending )
                .Map( dest => dest.DocGivenName, src => src.PatientVisit.PatientAdmittingDocGivenName, src => src.PhysicianType == PhysicianType.Admitting )
                .Map( dest => dest.DocGivenName, src => src.PatientVisit.PatientAttendingDocGivenName, src => src.PhysicianType == PhysicianType.Attending )
                .Map( dest => dest.DocGivenName, src => src.PatientVisit.PatientConsultingDocGivenName, src => src.PhysicianType == PhysicianType.Consulting )
                .Map( dest => dest.DocGivenName, src => src.PatientVisit.PatientReferringDocGivenName, src => src.PhysicianType == PhysicianType.Referring )
                .Map( dest => dest.DocGivenName, src => src.PatientVisit.MiddleName)
                .Map( dest => dest.DocMiddleName, src => src.PatientVisit.PatientAdmittingDocMiddleName, src => src.PhysicianType == PhysicianType.Admitting )
                .Map( dest => dest.DocMiddleName, src => src.PatientVisit.PatientAttendingDocMiddleName, src => src.PhysicianType == PhysicianType.Attending )
                .Map( dest => dest.DocMiddleName, src => src.PatientVisit.PatientConsultingDocMiddleName, src => src.PhysicianType == PhysicianType.Consulting )
                .Map( dest => dest.DocMiddleName, src => src.PatientVisit.PatientReferringDocMiddleName, src => src.PhysicianType == PhysicianType.Referring )
                .Map( dest => dest.DocMiddleName, src => src.PatientVisit.LastName)
                .Map( dest => dest.DocNPI, src => src.PatientVisit.PatientAdmittingDocNPI, src => src.PhysicianType == PhysicianType.Admitting )
                .Map( dest => dest.DocNPI, src => src.PatientVisit.PatientAttendingDocNPI, src => src.PhysicianType == PhysicianType.Attending )
                .Map( dest => dest.DocNameRepresentationCodeAssigningAgencyOrDepartment, src => src.PatientVisit.Department )
                .Map( dest => dest.DocPhoneNumber, src => src.PatientVisit.PatientAdmittingDocPhoneNumber, src => src.PhysicianType == PhysicianType.Admitting )
                .Map( dest => dest.DocPhoneNumber, src => src.PatientVisit.PatientAttendingDocPhoneNumber, src => src.PhysicianType == PhysicianType.Attending )
                .Map( dest => dest.DocPhysicianId, src => src.PatientVisit.PatientAdmittingDocPhysicianID, src => src.PhysicianType == PhysicianType.Admitting )
                .Map( dest => dest.DocPhysicianId, src => src.PatientVisit.PatientAttendingDocPhysicianID, src => src.PhysicianType == PhysicianType.Attending )
                .Map( dest => dest.DocSpecialty, src => src.PatientVisit.PatientAdmittingDocSpecialty, src => src.PhysicianType == PhysicianType.Admitting )
                .Map( dest => dest.DocSpecialty, src => src.PatientVisit.PatientAttendingDocSpecialty, src => src.PhysicianType == PhysicianType.Attending )
                .Map( dest => dest.DocState, src => src.PatientVisit.PatientAdmittingDocState, src => src.PhysicianType == PhysicianType.Admitting )
                .Map( dest => dest.DocState, src => src.PatientVisit.PatientAttendingDocState, src => src.PhysicianType == PhysicianType.Attending )
                .Map( dest => dest.DocTaxonomyCode, src => src.PatientVisit.PatientAdmittingDocTaxonomyCode, src => src.PhysicianType == PhysicianType.Admitting )
                .Map( dest => dest.DocTaxonomyCode, src => src.PatientVisit.PatientAttendingDocTaxonomyCode, src => src.PhysicianType == PhysicianType.Attending )
                .Map( dest => dest.DocZip, src => src.PatientVisit.PatientAdmittingDocZip, src => src.PhysicianType == PhysicianType.Admitting )
                .Map( dest => dest.DocZip, src => src.PatientVisit.PatientAttendingDocZip, src => src.PhysicianType == PhysicianType.Attending )
                .Map( dest => dest.DocZip, src => src.PatientVisit.FacilityZip, src => src.PhysicianType == PhysicianType.Admitting)
                .Map( dest => dest.DocZip, src => src.PatientVisit.FacilityZip, src => src.PhysicianType == PhysicianType.Attending)
                .Map( dest => dest.DocPhysicianTypeDescription, src => src.PatientVisit.Physician_RoleDescription)
                .Map( dest => dest.DocOrdinality, src => src.PatientVisit.Ordinality.ToString(CultureInfo.InvariantCulture))
                .Map( dest => dest.DocOrder, src => src.PatientVisit.Order.ToString(CultureInfo.InvariantCulture))
                .Map( dest => dest.DocPhysicianId, src => src.PatientVisit.IDNumber)
                .Map( dest => dest.DocSourceTable, src => src.PatientVisit.SourceTable)
                .Map( dest => dest.DocAssigningAuthority, src => src.PatientVisit.AssigningAuthority)
                .Map( dest => dest.DocNameTypeCode, src => src.PatientVisit.NameTypeCode)
                .Map( dest => dest.DocIdentifierCheckDigit, src => src.PatientVisit.IdentifierCheckDigit)
                .Map( dest => dest.DocIdentifierTypeCode, src => src.PatientVisit.IdentifierTypeCode)
                .Map( dest => dest.DocNameRepresentationCode, src => src.PatientVisit.NameRepresentationCode)
                .Map( dest => dest.DocEffectiveDate, src => src.PatientVisit.EffectiveDate)
                .Map( dest => dest.DocExpirationDate, src => src.PatientVisit.ExpirationDate)
                .Map( dest => dest.DocNameAssemblyOrder, src => src.PatientVisit.NameAssemblyOrder)
                .Map( dest => dest.DocNameContext, src => src.PatientVisit.NameContext)
                .Map( dest => dest.DocNameValidityRange, src => src.PatientVisit.NameValidityRange)
                .Map( dest => dest.PhysicianType, src => src.PhysicianType)
                .IgnoreNonMapped( true );
        }
    }
}
