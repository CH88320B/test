using System.Globalization;
using EH.Shared.SdocAdapter.Enums;
using EH.Shared.SdocToXpmConverter.Mapping.Tools;
using Mapster;

namespace EH.Shared.SdocToXpmConverter.Mapping.Configs
{
    public class PatientVisitMappingConfig : IRegister
    {
        public void Register(TypeAdapterConfig config)
        {
            // Mapeo de configuraci√≥n para Models.Xpm.PatientVisit y dependencias.
            TypeAdapterConfig<Models.Xpm.PatientVisit, SdocAdapter.Root>.ForType()
                .Map(dest => dest.PatientVisit.IsSelfPay, src => src.IsSelfPay)
                .Map(dest => dest.PatientVisit.AccommodationCode, src => src.AccommodationCode)
                .Map(dest => dest.PatientVisit.Activities, src => src.Activities)
                .Map(dest => dest.PatientVisit.Activity, src => src.Activity)
                .Map(dest => dest.PatientVisit.ActivityIDs, src => src.ActivityIDs)
                .Map(dest => dest.PatientVisit.LengthOfStay, src => src.ActualLengthofInpatientStay)
                .Map(dest => dest.PatientVisit.AdmissionReason, src => src.AdmissionReason)
                .Map(dest => dest.PatientVisit.AdmissionType, src => src.AdmissionType)
                .Map(dest => dest.PatientVisit.AdmissionType_DDSO, src => src.AdmissionTypeDDSO)
                .Map(dest => dest.PatientVisit.AdmitDateTime, src => src.AdmitDateTime)
                .Map(dest => dest.PatientVisit.DateAdmitted, src => src.AdmitDateTime)
                .Map(dest => dest.PatientVisit.AdmitProcedureCode, src => src.AdmitProcedureCode)
                .Map(dest => dest.PatientVisit.AdmitProcedureCodesCombined, src => src.AdmitProcedureCodesCombined)
                .Map(dest => dest.PatientVisit.AdmitSource, src => src.AdmitSource)
                .Map(dest => dest.PatientVisit.MSP.AdmittedLast60DaysAdmitDate, src => src.AdmittedLast60DaysAdmitDate)
                .Map(dest => dest.PatientVisit.MSP.AdmittedLast60DaysDischargeDate, src => src.AdmittedLast60DaysDischargeDate)
                .Map(dest => dest.PatientVisit.MSP.AdmittedLast60DaysFacilityName, src => src.AdmittedLast60DaysFacilityName)
                .Map(dest => dest.PatientVisit.MSP.AdmittedToHospitalLast60Days, src => src.AdmittedToHospitalLast60Days)
                .Map(dest => dest.PatientVisit.AdmittingDiagnosisCode, src => src.AdmittingDiagnosisCode)
                .Map(dest => dest.PatientVisit.AdmittingDiagnosisCode_ICD10, src => src.AdmittingDiagnosisCodeICD10)
                .Map(dest => dest.PatientVisit.AdmitURN, src => src.AdmitURN)
                .Map(dest => dest.PatientVisit.AetnaPIN, src => src.AetnaPIN)
                .Map(dest => dest.PatientVisit.AlternateVisitID, src => src.AlternateVisitId)
                .Map(dest => dest.PatientVisit.AppointmentStatus, src => src.AppointmentStatus)
                .Map(dest => dest.PatientVisit.AssignedArea, src => src.AssignedArea)
                .Map(dest => dest.PatientVisit.AssignedLocation, src => src.AssignedLocation)
                .Map(dest => dest.PatientVisit.AuthFacilityID, src => src.AuthFacilityId)
                .Map(dest => dest.PatientVisit.AuthProviderNPI, src => src.AuthProviderNPI)
                .Map(dest => dest.PatientVisit.AuthReferringLocationNPI, src => src.AuthReferringLocationNPI)
                .Map(dest => dest.PatientVisit.AuthReferringProviderNPI, src => src.AuthReferringProviderNPI)
                .Map(dest => dest.PatientVisit.BadDebtAgencyCode, src => src.BadDebtAgencyCode)
                .Map(dest => dest.PatientVisit.BedType, src => src.BedType)
                .Map(dest => dest.PatientVisit.BillingNumber, src => src.BillingNumber)
                .Map(dest => dest.PatientVisit.BypassEMRN_Updates, src => src.BypassEMRNUpdates)
                .Map(dest => dest.PatientVisit.Calculated, src => MappingHelpers.MapCalculatedForPatientVisit(src))
                .Map(dest => dest.PatientVisit.CertificateTypeCode, src => src.CertificateTypeCode)
                .Map(dest => dest.PatientVisit.CertificationType, src => src.CertificationType)
                .Map(dest => dest.PatientVisit.ClaimMonetaryAmount, src => decimal.TryParse(src.ClaimMonetaryAmount, NumberStyles.Any, CultureInfo.InvariantCulture, out var claimAmount) ? claimAmount : default(decimal))
                .Map(dest => dest.PatientVisit.ClaimMonetaryAmountExists, src => src.ClaimMonetaryAmountExists)
                .Map(dest => dest.PatientVisit.ClientMasterPatientID, src => src.ClientMasterPatientId)
                .Map(dest => dest.PatientVisit.ClientProvided_AccountUpdatedBy, src => src.ClientProvidedAccountUpdatedBy)
                .Map(dest => dest.PatientVisit.ClientProvided_MedicalNecessityFailedReason, src => src.ClientProvidedMedicalNecessityFailedReason)
                .Map(dest => dest.PatientVisit.ClientProvided_MedicalNecessityPasses, src => src.ClientProvidedMedicalNecessityPasses)
                .Map(dest => dest.PatientVisit.ClientProvided_PatientArrivedBy, src => src.ClientProvidedPatientArrivedBy)
                .Map(dest => dest.PatientVisit.ClientSpecificNumber, src => src.ClientSpecificNumber)
                .Map(dest => dest.PatientVisit.ClientTaxId, src => src.ClientTaxId)
                .Map(dest => dest.PatientVisit.ClinicOrganizationName, src => src.ClinicOrganizationName)
                .Map(dest => dest.PatientVisit.ComprehensiveLocationIdentifier, src => src.ComprehensiveLocationIdentifier)
                .Map(dest => dest.PatientVisit.ClaimMonetaryAmount, src => decimal.TryParse(src.ClaimMonetaryAmount, NumberStyles.Any, CultureInfo.InvariantCulture, out var claimAmount) ? claimAmount : default(decimal))
                .Map(dest => dest.PatientVisit.PPE_ContractDefinitionFlag, src => src.ContractDefinitionFlag)
                .Map(dest => dest.PatientVisit.ControlNumbers, src => src.ControlNumbers)
                .Map(dest => dest.PatientVisit.CreditRating, src => src.CreditRating)
                .Map(dest => dest.PatientVisit.DeathAndAutopsy, src => src.DeathAndAutopsy)
                .Map(dest => dest.PatientVisit.DeleteAccountDate, src => src.DeleteAccountDate)
                .Map(dest => dest.PatientVisit.DeleteAccountIndicator, src => src.DeleteAccountIndicator)
                .Map(dest => dest.PatientVisit.DischargeCode, src => src.DischargeDisposition)
                .Map(dest => dest.PatientVisit.DischargeDisposition, src => src.DischargeDisposition)
                .Map(dest => dest.PatientVisit.DischargedToLocation, src => src.DischargedToLocation)
                .Map(dest => dest.PatientVisit.DiscountPosted, src => decimal.TryParse(src.DiscountPosted, NumberStyles.Any, CultureInfo.InvariantCulture, out var discount) ? discount : default(decimal))
                .Map(dest => dest.PatientVisit.DrugName, src => src.DrugName)
                .Map(dest => dest.PatientVisit.DrugStrength, src => src.DrugStrength)
                .Map(dest => dest.PatientVisit.MSP.DualEntitlementMedicareDualEntitlement, src => src.DualEntitlementMedicareDualEntitlement)
                .Map(dest => dest.PatientVisit.MSP.DualEntitlementMedicareInitialEntitlementOnESRD, src => src.DualEntitlementMedicareInitialEntitlementOnESRD)
                .Map(dest => dest.PatientVisit.MSP.DualEntitlementWorkingAgedMSPDisabilityApply, src => src.DualEntitlementWorkingAgedMSPDisabilityApply)
                .Map(dest => dest.PatientVisit.EncounterPayerDescription, src => src.EncounterPayerDescription)
                .Map(dest => dest.PatientVisit.EncounterPayerID, src => src.EncounterPayerId)
                .Map(dest => dest.PatientVisit.EntityIdentifier, src => src.EntityIdentifier)
                .Map(dest => dest.PatientVisit.PPE_EstimateContChargeZeroFlag, src => src.EstimateContChargeZeroFlag)
                .Map(dest => dest.PatientVisit.EstimatedDOS, src => src.EstimatedDOS)
                .Map(dest => dest.PatientVisit.PPE_EstimateWithEditBenefitFlag, src => src.EstimateWithEditBenefitFlag)
                .Map(dest => dest.PatientVisit.PPE_EstimateWithNoBenefitFlag, src => src.EstimateWithNoBenefitFlag)
                .Map(dest => dest.PatientVisit.ExpectedService, src => src.ExpectedService)
                .Map(dest => dest.PatientVisit.FacilityAddress1, src => src.FacilityAddress1)
                .Map(dest => dest.PatientVisit.FacilityAddress2, src => src.FacilityAddress2)
                .Map(dest => dest.PatientVisit.FacilityCity, src => src.FacilityCity)
                .Map(dest => dest.PatientVisit.FacilityCode, src => src.FacilityCode)
                .Map(dest => dest.PatientVisit.FacilityContactName, src => src.FacilityContactName)
                .Map(dest => dest.PatientVisit.FacilityContactPhone, src => src.FacilityContactPhone)
                .Map(dest => dest.PatientVisit.FacilityFaxNumber, src => src.FacilityFaxNumber)
                .Map(dest => dest.PatientVisit.FacilityName, src => src.FacilityName)
                .Map(dest => dest.PatientVisit.FacilityNPI, src => src.FacilityNPI)
                .Map(dest => dest.PatientVisit.FacilityState, src => src.FacilityState)
                .Map(dest => dest.PatientVisit.FacilityTaxId, src => src.FacilityTaxId)
                .Map(dest => dest.PatientVisit.FacilityTaxonomyCode, src => src.FacilityTaxonomyCode)
                .Map(dest => dest.PatientVisit.FacilityZip, src => src.FacilityZip)
                .Map(dest => dest.Patient.FinancialClass, src => src.FinancialClass)
                .Map(dest => dest.PatientVisit.FinancialClearanceStatus, src => src.FinancialClearanceStatus)
                .Map(dest => dest.PatientVisit.Financials, src => src.Financials.Adapt<Models.Xpm.Financials>())
                .Map(dest => dest.PatientVisit.HealthPlanName, src => src.HealthPlanName)
                .Map(dest => dest.PatientVisit.MSP.HospiceIsCoveredUnderHospiceProgram, src => src.HospiceIsCoveredUnderHospiceProgram)
                .Map(dest => dest.PatientVisit.MSP.HospiceIsPatientHospice, src => src.HospiceIsPatientHospice)
                .Map(dest => dest.PatientVisit.ServiceType, src => src.HospitalServiceCode)
                .Map(dest => dest.PatientVisit.IDXLocation, src => src.IDXLocation)
                .Map(dest => dest.PatientVisit.MSP.General.CompleteQuestionnaire, src => src.InfoGivenByCompleteQuestionnaire)
                .Map(dest => dest.PatientVisit.MSP.General.InfoGivenDate, src => src.InfoGivenByDate)
                .Map(dest => dest.PatientVisit.MSP.General.InfoGivenByName_FirstName, src => src.InfoGivenByFirstName)
                .Map(dest => dest.PatientVisit.MSP.General.InfoGivenByName_LastName, src => src.InfoGivenByLastName)
                .Map(dest => dest.PatientVisit.MSP.General.InfoGivenByName_MiddleInitial, src => src.InfoGivenByMiddleInitial)
                .Map(dest => dest.PatientVisit.MSP.General.InfoGivenByName_Prefix, src => src.InfoGivenByPrefix)
                .Map(dest => dest.PatientVisit.MSP.General.InfoGivenByRelationship_RelationshipCode, src => src.InfoGivenByRelationshipCode)
                .Map(dest => dest.PatientVisit.MSP.General.InfoGivenByRelationship_RelationshipDescription, src => src.InfoGivenByRelationshipDescription)
                .Map(dest => dest.PatientVisit.MSP.General.InfoGivenByName_Suffix, src => src.InfoGivenBySuffix)
                .Map(dest => dest.PatientVisit.InsuranceCount, src => src.InsuranceCount)
                .Map(dest => dest.PatientVisit.InsVerifiedBy, src => src.InsVerifiedBy)
                .Map(dest => dest.PatientVisit.InterestCode, src => src.InterestCode)
                .Map(dest => dest.PatientVisit.IsComplete, src => src.IsComplete)
                .Map(dest => dest.PatientVisit.IsObservation, src => src.IsObservation)
                .Map(dest => dest.PatientVisit.IsPortalUser, src => src.IsPortalUser)
                .Map(dest => dest.PatientVisit.LevelOfService, src => src.LevelOfService)
                .Map(dest => dest.PatientVisit.LocationStatus, src => src.LocationStatus)
                .Map(dest => dest.PatientVisit.MSP.Miscellaneouse4, src => src.Miscellaneouse4)
                .Map(dest => dest.PatientVisit.MSP.Miscellaneouse5, src => src.Miscellaneouse5)
                .Map(dest => dest.PatientVisit.MSP.Miscellaneouse6, src => src.Miscellaneouse6)
                .Map(dest => dest.PatientVisit.MSP.Miscellaneouse7, src => src.Miscellaneouse7)
                .Map(dest => dest.PatientVisit.MSP.Miscellaneouse8, src => src.Miscellaneouse8)
                .Map(dest => dest.PatientVisit.MSP.Miscellaneouse9, src => src.Miscellaneouse9)
                .Map(dest => dest.PatientVisit.VisitArrivalMode, src => src.ModeOfArrivalCode)
                .Map(dest => dest.PatientVisit.MPIN, src => src.MPIN)
                .Map(dest => dest.PatientVisit.MSPByPass, src => src.MSPByPass)
                .Map(dest => dest.PatientVisit.NDC, src => src.NDC)
                .Map(dest => dest.PatientVisit.NeboMessageID, src => src.NeboMessageId)
                .Map(dest => dest.PatientVisit.NOAAdmissionDate, src => src.NOAAdmissionDate)
                .Map(dest => dest.PatientVisit.NOAVisitTime, src => src.NOAVisitTime)
                .Map(dest => dest.PatientVisit.OnsetOfIllness, src => src.OnsetOfIllness)
                .Map(dest => dest.PatientVisit.OrderLocation, src => src.OrderLocation)
                .Map(dest => dest.PatientVisit.OtherHealthcareProvider, src => src.OtherHealthcareProvider)
                .Map(dest => dest.PatientVisit.PassportVisitIdentifier, src => src.PassportVisitIdentifier)
                .Map(dest => dest.PatientVisit.PatientClass, src => src.PatientClass)
                .Map(dest => dest.PatientVisit.PatientEntry_ServiceEndDate, src => src.PatientEntryServiceEndDate)
                .Map(dest => dest.PatientVisit.PatientEntry_ServiceStartDate, src => src.PatientEntryServiceStartDate)
                .Map(dest => dest.PatientVisit.PatientFacility, src => src.PatientFacility)
                .Map(dest => dest.PatientVisit.PatientMemberID, src => src.PatientMemberId)
                .Map(dest => dest.PatientVisit.PatientMerges, src => src.PatientMerges)
                .Map(dest => dest.PatientVisit.PatientModule, src => src.PatientModule)
                .Map(dest => dest.PatientVisit.PatientServiceCenter, src => src.PatientServiceCenter)
                .Map(dest => dest.PatientVisit.PatientStatus, src => src.PatientStatus)
                .Map(dest => dest.PatientVisit.PatientStatusCode, src => src.PatientStatusCode)
                .Map(dest => dest.PatientVisit.PatientType, src => src.PatientType)
                .Map(dest => dest.PatientVisit.PatientValuablesLocation, src => src.PatientValuablesLocation)
                .Map(dest => dest.PatientVisit.VIPCode, src => src.PatientVipIndicator)
                .Map(dest => dest.PatientVisit.VIPIndicator, src => src.PatientVipIndicator)
                .Map(dest => dest.PatientVisit.PaymentReceived, src => src.PaymentReceived)
                .Map(dest => dest.PatientVisit.PETouchlessTypeIndicator, src => src.PETouchlessTypeIndicator)
                .Map(dest => dest.PatientVisit.ProcedureCodeQuantity, src => src.ProcedureCodeQuantity)
                .Map(dest => dest.PatientVisit.ProcedureCodes, src => src.ProcedureCodes)
                .Map(dest => dest.PatientVisit.ProcedureMnemonic, src => src.ProcedureMnemonic)
                .Map(dest => dest.PatientVisit.ProcedureTypeCode, src => src.ProcedureTypeCode)
                .Map(dest => dest.PatientVisit.PropertyAndCasualty, src => src.PropertyAndCasualty)
                .Map(dest => dest.PatientVisit.PPE_PSTNoPayorResponseFlag, src => src.PSTNoPayorResponseFlag)
                .Map(dest => dest.PatientVisit.PPE_PSTNoReqSTCsFlag, src => src.PSTNoReqSTCsFlag)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField1, src => src.QueueManagerUserDefinedFields1)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField10, src => src.QueueManagerUserDefinedFields10)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField11, src => src.QueueManagerUserDefinedFields11)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField12, src => src.QueueManagerUserDefinedFields12)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField13, src => src.QueueManagerUserDefinedFields13)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField14, src => src.QueueManagerUserDefinedFields14)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField15, src => src.QueueManagerUserDefinedFields15)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField16, src => src.QueueManagerUserDefinedFields16)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField17, src => src.QueueManagerUserDefinedFields17)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField18, src => src.QueueManagerUserDefinedFields18)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField19, src => src.QueueManagerUserDefinedFields19)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField2, src => src.QueueManagerUserDefinedFields2)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField20, src => src.QueueManagerUserDefinedFields20)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField3, src => src.QueueManagerUserDefinedFields3)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField4, src => src.QueueManagerUserDefinedFields4)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField5, src => src.QueueManagerUserDefinedFields5)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField6, src => src.QueueManagerUserDefinedFields6)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField7, src => src.QueueManagerUserDefinedFields7)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField8, src => src.QueueManagerUserDefinedFields8)
                .Map(dest => dest.PatientVisit.QueueManagerUserDefinedField9, src => src.QueueManagerUserDefinedFields9)
                .Map(dest => dest.PatientVisit.ReferralID, src => src.ReferralId)
                .Map(dest => dest.PatientVisit.ReferralSourceFirstName, src => src.ReferralSourceFirstName)
                .Map(dest => dest.PatientVisit.ReferralSourceID, src => src.ReferralSourceId)
                .Map(dest => dest.PatientVisit.RegisteredByUser, src => src.RegisteredByUser)
                .Map(dest => dest.PatientVisit.RoomType, src => src.RoomType)
                .Map(dest => dest.PatientVisit.ScannedImages, src => src.ScannedImages.Adapt<Models.Xpm.ScannedImages>())
                .Map(dest => dest.PatientVisit.SelectedServiceType, src => src.SelectedServiceType)
                .Map(dest => dest.PatientVisit.ServiceCode, src => src.ServiceCode)
                .Map(dest => dest.PatientVisit.ServiceDate, src => src.ServiceDate)
                .Map(dest => dest.PatientVisit.ServiceProviderID, src => src.ServiceProviderId)
                .Map(dest => dest.PatientVisit.ServiceProviderName, src => src.ServiceProviderName)
                .Map(dest => dest.PatientVisit.ServiceProviderNPI, src => src.ServiceProviderNPI)
                .Map(dest => dest.PatientVisit.ServicingLocationName, src => src.ServicingLocationName)
                .Map(dest => dest.PatientVisit.ServicingLocationNPI, src => src.ServicingLocationNPI)
                .Map(dest => dest.PatientVisit.TrackingNumber, src => src.TrackingNumber)
                .Map(dest => dest.PatientVisit.TransferReason_AlternateIdentifier, src => src.TransferReasonAlternateIdentifier)
                .Map(dest => dest.PatientVisit.TransferReason_AlternateText, src => src.TransferReasonAlternateText)
                .Map(dest => dest.PatientVisit.TransferToBadDebtCode, src => src.TransferToBadDebtCode)
                .Map(dest => dest.PatientVisit.TransferToBadDebtDate, src => src.TransferToBadDebtDate)
                .Map(dest => dest.PatientVisit.UBData, src => src.UBData.Adapt<Models.Xpm.UbData>())
                .Map(dest => dest.PatientVisit.UpdatedByEDRep, src => src.UpdatedByEDRep)
                .Map(dest => dest.PatientVisit.VerifiedDate, src => src.VerifiedDate)
                .Map(dest => dest.PatientVisit.VerifiedName, src => src.VerifiedName)
                .Map(dest => dest.PatientVisit.VisitDescription, src => src.VisitDescription)
                .Map(dest => dest.PatientVisit.VisitDx, src => src.VisitDx)
                .Map(dest => dest.PatientVisit.VisitEpisodeNumber, src => src.VisitEpisodeNumber)
                .Map(dest => dest.PatientVisit.VisitIdentification, src => src.VisitIdentification)
                .Map(dest => dest.PatientVisit.VisitInformation, src => src.VisitInformation)
                .Map(dest => dest.PatientVisit.VisitNumber, src => src.VisitNumber)
                .Map(dest => dest.PatientVisit.VisitNumber, src => src.VisitNumber)
                .Map(dest => dest.PatientVisit.VisitPendingClaim, src => src.VisitPendingClaim)
                .Map(dest => dest.PatientVisit.VisitSurgery, src => src.VisitSurgery)
                .Map(dest => dest.PatientVisit.WCIRetainIndicator, src => src.WCIRetainIndicator)
                .Map(dest => dest.PatientVisit.WorkersCompNumber, src => src.WorkersCompNumber)
                .Map(dest => dest.PatientVisit.WorksiteName, src => src.WorksiteName);
        }
    }
}
TypeAdapterConfig<Models.Xpm.UbData, SdocAdapter.UBData>.ForType()
    .Map(dest => dest.Occurrence_OccurrenceCodes, src => src.OccuranceCodeUB82)
    .Map(dest => dest.Occurrence_OccurrenceCodes, src => src.OccuranceCodeUB92)
    .Map(dest => dest.OccurrenceCodeAndDate_OccurrenceCodes, src => src.OccuranceCodeUB92)
    .Map(dest => dest.OccurrenceCodeAndDate_OccurrenceDates, src => src.OccuranceDateUB92)
    .Map(dest => dest.Occurrence_OccurrenceDates, src => src.OccurrenceDateUB82)
    .Map(dest => dest.ConditionCode, src => src.UB82ConditionCode)
    .Map(dest => dest.Occurrence_OccurrenceCodes, src => src.Ub82OccurenceCodes)
    .Map(dest => dest.Occurrence_OccurrenceDates, src => src.Ub82OccurenceDates)
    .Map(dest => dest.ValueAmountAndCode, src => src.Ub82ValueAmountAndCode)
    .Map(dest => dest.OtherConditionCode, src => src.Ub92ConditionCode)
    .Map(dest => dest.OccurrenceCodeAndDate_OccurrenceCodes, src => src.Ub92OccurenceCodes)
    .Map(dest => dest.OccurrenceCodeAndDate_OccurrenceDates, src => src.Ub92OccurenceDates)
    .Map(dest => dest.ValueAmountAndCode, src => src.ValueAmountAndCodeUB82)
    .Map(dest => dest.ValueAmountAndCode, src => src.ValueAmountandCodeUB92)
    .IgnoreNonMapped(true);

TypeAdapterConfig<Models.Xpm.Financials, SdocAdapter.PatientVisit>.ForType()
    .Map(dest => dest.BadDebtRecoveryAmount, src => decimal.Parse(src.BadDebtRecoveryAmount, CultureInfo.InvariantCulture))
    .Map(dest => dest.BadDebtTransferAmount, src => decimal.Parse(src.BadDebtTransferAmount, CultureInfo.InvariantCulture))
    .Map(dest => dest.CurrentPatientBalance, src => decimal.Parse(src.CurrentPatientBalance, CultureInfo.InvariantCulture))
    .Map(dest => dest.AmountOwed, src => decimal.Parse(src.CurrentPatientBalance, CultureInfo.InvariantCulture))
    .Map(dest => dest.TotalAdjustments, src => decimal.Parse(src.TotalAdjustments, CultureInfo.InvariantCulture))
    .Map(dest => dest.TotalCharges, src => decimal.Parse(src.TotalCharges, CultureInfo.InvariantCulture))
    .Map(dest => dest.TotalPayments, src => decimal.Parse(src.TotalPayments, CultureInfo.InvariantCulture))
    .IgnoreNonMapped(true);

TypeAdapterConfig<Models.Xpm.Accident, SdocAdapter.Root>.ForType()
    .Map(dest => dest.MSP.AccidentDateTime, src => src.AccidentDateTime)
    .Map(dest => dest.PatientVisit.AccidentState, src => src.AutoAccidentState)
    .Map(dest => dest.PatientVisit.AccidentCode, src => src.Code)
    .Map(dest => dest.MSP.AccidentLocation, src => src.Location)
    .Map(dest => dest.MSP.AccidentDescription, src => src.Description)
    .IgnoreNonMapped(true);

TypeAdapterConfig<Models.Xpm.ScannedImages, SdocAdapter.SDoc_ScannedImage>.ForType()
    .Map(dest => dest.ImageID, src => src.ImageID)
    .Map(dest => dest.Scanned, src => src.Scanned)
    .IgnoreNonMapped(true);

TypeAdapterConfig<Models.Xpm.Order, (SdocAdapter.Order Order, SdocAdapter.Request Request)>.ForType()
    .Map(dest => dest.Order.OrderControl, src => src.OrderControl)
    .Map(dest => dest.Order.PlacerOrderNumber, src => src.PlacerOrderNumber)
    .Map(dest => dest.Order.FillerOrderNumber, src => src.OrderFillerOrderNumber)
    .Map(dest => dest.Order.OrderStatus, src => src.OrderStatus)
    .Map(dest => dest.Order.ServiceType, src => src.OrderType)
    .Map(dest => new List<Models.Xpm.Request>(), src => src.Requests)
    .IgnoreNonMapped(true);

TypeAdapterConfig<Models.Xpm.Request, SdocAdapter.Request>.ForType()
    .Map(dest => dest.OrderedDateTime, src => src.OrderedDateTime)
    .Map(dest => dest.OrderSequence, src => src.OrderSequence)
    .Map(dest => dest.PlacerGroupNumber, src => src.ProcedureGroup)
    .IgnoreNonMapped(true);

TypeAdapterConfig<Models.Xpm.Diagnosis, SdocAdapter.Diagnose>.ForType()
    .Map(dest => dest.DiagnosisCode, src => src.DiagnosisCode)
    .Map(dest => dest.Description, src => src.DiagnosisDescription)
    .Map(dest => dest.Code, src => src.DiagnosisCodeIdentifier)
    .Map(dest => dest.OrderSequence, src => src.DiagnosisPriority)
    .Map(dest => dest.DiagnosisType, src => src.DiagnosisType)
    .Map(dest => dest.DiagnosisCodingMethod, src => src.DiagnosisCodingMethod)
    .IgnoreNonMapped(true);

TypeAdapterConfig<Models.Xpm.PatientMerge, SdocAdapter.PatientMerge>.ForType()
    .Map(dest => dest.PriorAccountNumber, src => src.PriorPatientAccountNumber)
    .Map(dest => dest.PriorMedicalRecordNumber, src => src.PriorMedicalRecordNumber)
    .IgnoreNonMapped(true);

TypeAdapterConfig<(SdocAdapter.PatientVisit PatientVisit, PhysicianType PhysicianType), Models.Xpm.Physician>.ForType()
    .Map(dest => dest.PatientVisit.AssigningFacility, src => src.DocAssigningFacility)
    .Map(dest => dest.PatientVisit.CodeIdentifyingTheCheckDigitSchemeEmployed, src => src.DocCheckDigitScheme)
    .Map(dest => dest.PatientVisit.PatientAdmittingDocAddress1, src => src.DocAddress1, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.PatientAttendingDocAddress1, src => src.DocAddress1, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PatientVisit.PatientAdmittingDocAddress2, src => src.DocAddress2, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.PatientAttendingDocAddress2, src => src.DocAddress2, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PatientVisit.PatientAdmittingDocCity, src => src.DocCity, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.PatientAttendingDocCity, src => src.DocCity, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PatientVisit.PatientAdmittingDocDegree, src => src.DocDegree, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.PatientAttendingDocDegree, src => src.DocDegree, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PatientVisit.PatientConsultingDocDegree, src => src.DocDegree, src => src.PhysicianType == PhysicianType.Consulting)
    .Map(dest => dest.PatientVisit.PatientReferringDocDegree, src => src.DocDegree, src => src.PhysicianType == PhysicianType.Referring)
    .Map(dest => dest.PatientVisit.PatientAdmittingDocFamilyName, src => src.DocFamilyName, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.PatientAttendingDocFamilyName, src => src.DocFamilyName, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PatientVisit.PatientConsultingDocFamilyName, src => src.DocFamilyName, src => src.PhysicianType == PhysicianType.Consulting)
    .Map(dest => dest.PatientVisit.PatientReferringDocFamilyName, src => src.DocFamilyName, src => src.PhysicianType == PhysicianType.Referring)
    .Map(dest => dest.PatientVisit.FirstName, src => src.DocFamilyName)
    .Map(dest => dest.PatientVisit.PatientAdmittingDocFaxNumber, src => src.DocFaxNumber, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.PatientAttendingDocFaxNumber, src => src.DocFaxNumber, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PatientVisit.PatientAdmittingDocGivenName, src => src.DocGivenName, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.PatientAttendingDocGivenName, src => src.DocGivenName, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PatientVisit.PatientConsultingDocGivenName, src => src.DocGivenName, src => src.PhysicianType == PhysicianType.Consulting)
    .Map(dest => dest.PatientVisit.PatientReferringDocGivenName, src => src.DocGivenName, src => src.PhysicianType == PhysicianType.Referring)
    .Map(dest => dest.PatientVisit.MiddleName, src => src.DocGivenName)
    .Map(dest => dest.PatientVisit.PatientAdmittingDocMiddleName, src => src.DocMiddleName, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.PatientAttendingDocMiddleName, src => src.DocMiddleName, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PatientVisit.PatientConsultingDocMiddleName, src => src.DocMiddleName, src => src.PhysicianType == PhysicianType.Consulting)
    .Map(dest => dest.PatientVisit.PatientReferringDocMiddleName, src => src.DocMiddleName, src => src.PhysicianType == PhysicianType.Referring)
    .Map(dest => dest.PatientVisit.LastName, src => src.DocMiddleName)
    .Map(dest => dest.PatientVisit.PatientAdmittingDocNPI, src => src.DocNPI, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.PatientAttendingDocNPI, src => src.DocNPI, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PatientVisit.Department, src => src.DocNameRepresentationCodeAssigningAgencyOrDepartment)
    .Map(dest => dest.PatientVisit.PatientAdmittingDocPhoneNumber, src => src.DocPhoneNumber, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.PatientAttendingDocPhoneNumber, src => src.DocPhoneNumber, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PatientVisit.PatientAdmittingDocPhysicianID, src => src.DocPhysicianId, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.PatientAttendingDocPhysicianID, src => src.DocPhysicianId, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PatientVisit.PatientAdmittingDocSpecialty, src => src.DocSpecialty, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.PatientAttendingDocSpecialty, src => src.DocSpecialty, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PatientVisit.PatientAdmittingDocState, src => src.DocState, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.PatientAttendingDocState, src => src.DocState, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PatientVisit.PatientAdmittingDocTaxonomyCode, src => src.DocTaxonomyCode, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.PatientAttendingDocTaxonomyCode, src => src.DocTaxonomyCode, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PatientVisit.PatientAdmittingDocZip, src => src.DocZip, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.PatientAttendingDocZip, src => src.DocZip, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PatientVisit.FacilityZip, src => src.DocZip, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.FacilityZip, src => src.DocZip, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PhysicianType, src => src.PhysicianType)
    .Map(dest => dest.PhysicianType, src => src.PhysicianType)
    .Map(dest => dest.PatientVisit.Ordinality, src => src.DocOrdinality, src => src.PhysicianType == PhysicianType.Admitting)
    .Map(dest => dest.PatientVisit.Order, src => src.DocOrder, src => src.PhysicianType == PhysicianType.Attending)
    .Map(dest => dest.PatientVisit.Order, src => src.DocOrder, src => src.PhysicianType == PhysicianType.Consulting)
    .Map(dest => dest.PatientVisit.Order, src => src.DocOrder, src => src.PhysicianType == PhysicianType.Referring)
    .Map(dest => dest.PatientVisit.IDNumber, src => src.DocPhysicianId)
    .Map(dest => dest.PatientVisit.SourceTable, src => src.DocSourceTable)
    .Map(dest => dest.PatientVisit.AssigningAuthority, src => src.DocAssigningAuthority)
    .Map(dest => dest.PatientVisit.NameTypeCode, src => src.DocNameTypeCode)
    .Map(dest => dest.PatientVisit.IdentifierCheckDigit, src => src.DocIdentifierCheckDigit)
    .Map(dest => dest.PatientVisit.IdentifierTypeCode, src => src.DocIdentifierTypeCode)
    .Map(dest => dest.PatientVisit.NameRepresentationCode, src => src.DocNameRepresentationCode)
    .Map(dest => dest.PatientVisit.EffectiveDate, src => src.DocEffectiveDate)
    .Map(dest => dest.PatientVisit.ExpirationDate, src => src.DocExpirationDate)
    .Map(dest => dest.PatientVisit.NameAssemblyOrder, src => src.DocNameAssemblyOrder)
    .Map(dest => dest.PatientVisit.NameContext, src => src.DocNameContext)
    .Map(dest => dest.PatientVisit.NameValidityRange, src => src.DocNameValidityRange)
    .IgnoreNonMapped(true);
